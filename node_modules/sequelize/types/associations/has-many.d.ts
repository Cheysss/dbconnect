import { DataType } from '../data-types';
import {
  CreateOptions,
  CreationAttributes,
  Filterable,
  FindOptions,
  InstanceUpdateOptions,
  Model,
  ModelCtor,
  Transactionable,
} from '../model';
import { Association, ManyToManyOptions, MultiAssociationAccessors } from './base';

/**
 * Options provided when associating models with hasMany relationship
 */
export interface HasManyOptions extends ManyToManyOptions {

  /**
   * The name of the field to use as the key for the association in the source table. Defaults to the primary
   * key of the source table
   */
  sourceKey?: string;

  /**
   * A string or a data type to represent the identifier in the table
   */
  keyType?: DataType;
}

export class HasMany<S extends Model = Model, T extends Model = Model> extends Association<S, T> {
  public accessors: MultiAssociationAccessors;
  constructor(source: ModelCtor<S>, target: ModelCtor<T>, options: HasManyOptions);
}

/**
 * The options for the getAssociations mixin of the hasMany association.
 * @see HasManyGetAssociationsMixin
 */
export interface HasManyGetAssociationsMixinOptions extends FindOptions<any> {
  /**
   * Apply a scope on the related model, or remove its default scope by passing false.
   */
  scope?: string | string[] | boolean;
}

/**
 * The getAssociations mixin applied to models with hasMany.
 * An example of usage is as follows:
 *
 * ```js
 *
 * User.hasMany(Role);
 *
 * interface UserInstance extends Sequelize.Instance<UserInstance, UserAttributes>, UserAttributes {
 *  getRoles: Sequelize.HasManyGetAssociationsMixin<RoleInstance>;
 *  // setRoles...
 *  // addRoles...
 *  // addRole...
 *  // createRole...
 *  // removeRole...
 *  // removeRoles...
 *  // hasRole...
 *  // hasRoles...
 *  // countRoles...
 * }
 * ```
 *
 * @see https://sequelize.org/master/class/lib/associations/has-many.js~HasMany.html
 * @see Instance
 */
export type HasManyGetAssociationsMixin<TModel> = (options?: HasManyGetAssociationsMixinOptions) => Promise<TModel[]>;

/**
 * The options for the setAssociations mixin of the hasMany association.
 * @see HasManySetAssociationsMixin
 */
export interface HasManySetAssociationsMixinOptions extends FindOptions<any>, InstanceUpdateOptions<any> {}

/**
 * The setAssociations mixin applied to models with hasMany.
 * An example of usage is as follows:
 *
 * ```js
 *
 * User.hasMany(Role);
 *
 * interface UserInstance extends Sequelize.Instance<UserInstance, UserAttributes>, UserAttributes {
 *  // getRoles...
 *  setRoles: Sequelize.HasManySetAssociationsMixin<RoleInstance, RoleId>;
 *  // addRoles...
 *  // addRole...
 *  // createRole...
 *  // removeRole...
 *  // removeRoles...
 *  // hasRole...
 *  // hasRoles...
 *  // countRoles...
 * }
 * ```
 *
 * @see https://sequelize.org/master/class/lib/associations/has-many.js~HasMany.html
 * @see Instance
 */
export type HasManySetAssociationsMixin<TModel, TModelPrimaryKey> = (
  newAssociations?: (TModel | TModelPrimaryKey)[],
  options?: HasManySetAssociationsMixinOptions
) => Promise<void>;

/**
 * The options for the addAssociations mixin of the hasMany association.
 * @see HasManyAddAssociationsMixin
 */
export interface HasManyAddAssociationsMixinOptions extends InstanceUpdateOptions<any> {}

/**
 * The addAssociations mixin applied to models with hasMany.
 * An example of usage is as follows:
 *
 * ```js
 *
 * User.hasMany(Role);
 *
 * interface UserInstance extends Sequelize.Instance<UserInstance, UserAttributes>, UserAttributes {
 *  // getRoles...
 *  // setRoles...
 *  addRoles: Sequelize.HasManyAddAssociationsMixin<RoleInstance, RoleId>;
 *  // addRole...
 *  // createRole...
 *  // removeRole...
 *  // removeRoles...
 *  // hasRole...
 *  // hasRoles...
 *  // countRoles...
 * }
 * ```
 *
 * @see https://sequelize.org/master/class/lib/associations/has-many.js~HasMany.html
 * @see Instance
 */
export type HasManyAddAssociationsMixin<TModel, TModelPrimaryKey> = (
  newAssociations?: (TModel | TModelPrimaryKey)[],
  options?: HasManyAddAssociationsMixinOptions
) => Promise<void>;

/**
 * The options for the addAssociEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\netbc63a.inf_amd64_6cda5a1383dbe946\Configurations\BCM43XGBO_NT61.NTamd64\Driver\Ndi\params\Rate\enum">
      <registryValue name="0" valueType="REG_SZ" value="Best Rate" />
      <registryValue name="108" valueType="REG_SZ" value="54" />
      <registryValue name="11" valueType="REG_SZ" value=" 5.5" />
      <registryValue name="12" valueType="REG_SZ" value=" 6" />
      <registryValue name="18" valueType="REG_SZ" value=" 9" />
      <registryValue name="2" valueType="REG_SZ" value=" 1" />
      <registryValue name="22" valueType="REG_SZ" value="11" />
      <registryValue name="24" valueType="REG_SZ" value="12" />
      <registryValue name="36" valueType="REG_SZ" value="18" />
      <registryValue name="4" valueType="REG_SZ" value=" 2" />
      <registryValue name="48" valueType="REG_SZ" value="24" />
      <registryValue name="72" valueType="REG_SZ" value="36" />
      <registryValue name="96" valueType="REG_SZ" value="48" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\netbc63a.inf_amd64_6cda5a1383dbe946\Configurations\BCM43XGBO_NT61.NTamd64\Driver\Ndi\params\rts">
      <registryValue name="default" valueType="REG_SZ" value="2347" />
      <registryValue name="max" valueType="REG_SZ" value="2347" />
      <registryValue name="min" valueType="REG_SZ" value="0" />
      <registryValue name="ParamDesc" valueType="REG_SZ" value="RTS Threshold" />
      <registryValue name="type" valueType="REG_SZ" value="dword" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\netbc63a.inf_amd64_6cda5a1383dbe946\Configurations\BCM43XGBO_NT61.NTamd64\Driver\Ndi\params\WakeUpCapabilities">
      <registryValue name="default" valueType="REG_SZ" value="3" />
      <registryValue name="ParamDesc" valueType="REG_SZ" value="Wake-Up Mode" />
      <registryValue name="type" valueType="REG_SZ" value="enum" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\netbc63a.inf_amd64_6cda5a1383dbe946\Configurations\BCM43XGBO_NT61.NTamd64\Driver\Ndi\params\WakeUpCapabilities\enum">
      <registryValue name="0" valueType="REG_SZ" value="None" />
      <registryValue name="1" valueType="REG_SZ" value="Magic Packet" />
      <registryValue name="2" valueType="REG_SZ" value="Wake Up Frame" />
      <registryValue name="28" valueType="REG_SZ" value="LossOfLink" />
      <registryValue name="29" valueType="REG_SZ" value="MagicPkt &amp; LinkLoss" />
      <registryValue name="3" valueType="REG_SZ" value="Magic &amp; WakeUp Frame" />
      <registryValue name="30" valueType="REG_SZ" value="WakeUpPkt &amp; LinkLoss" />
      <registryValue name="31" valueType="REG_SZ" value="All" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\netbc63a.inf_amd64_6cda5a1383dbe946\Configurations\BCM43XG_NT61.NTamd64">
      <registryValue name="ConfigFlags" valueType="REG_DWORD" value="0x00000000" />
      <registryValue name="ConfigScope" valueType="REG_DWORD" value="0x00000007" />
      <registryValue name="IncludedConfigs" valueType="REG_MULTI_SZ" value="&quot;*:VWiFiBus.CopyFiles.Driver&quot;,&quot;*:VWiFiBus.PnPFilterRegistration.Device&quot;,&quot;*:VWiFiBus.Services&quot;" />
      <registryValue name="IncludedInfs" valueType="REG_MULTI_SZ" value="&quot;netvwifibus.inf&quot;" />
      <registryValue name="Service" valueType="REG_SZ" value="BCM43XX" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\netbc63a.inf_amd64_6cda5a1383dbe946\Configurations\BCM43XG_NT61.NTamd64\Driver">
      <registryValue name="*IfType" valueType="REG_DWORD" value="0x00000047" />
      <registryValue name="*MediaType" valueType="REG_DWORD" value="0x00000010" />
      <registryValue name="*PhysicalMediaType" valueType="REG_DWORD" value="0x00000009" />
      <registryValue name="*PriorityVLANTag" valueType="00020001" value="30000000" />
      <registryValue name="Afterburner" valueType="REG_SZ" value="0" />
      <registryValue name="antdiv" valueType="REG_SZ" value="-1" />
      <registryValue name="ApCompatMode" valueType="REG_SZ" value="0" />
      <registryValue name="BadFramePreempt" valueType="REG_SZ" value="0" />
      <registryValue name="BTCoexist" valueType="REG_SZ" value="3" />
      <registryValue name="BusType" valueType="REG_SZ" value="5" />
      <registryValue name="ccx_rm" valueType="REG_SZ" value="1" />
      <registryValue name="ccx_rm_limit" valueType="REG_SZ" value="300" />
      <registryValue name="Channel" valueType="00200000" value="" />
      <registryValue name="Chanspec" valueType="REG_SZ" value="11" />
      <registryValue name="Characteristics" valueType="REG_DWORD" value="0x00000084" />
      <registryValue name="EFCEnable" valueType="REG_SZ" value="0" />
      <registryValue name="EnableAutoConnect" valueType="REG_SZ" value="0" />
      <registryValue name="frag" valueType="00020001" value="32003300340036000000" />
      <registryValue name="FrameBursting" valueType="REG_SZ" value="0" />
      <registryValue name="gpio0" valueType="00200000" value="" />
      <registryValue name="gpio1" valueType="00200000" value="" />
      <registryValue name="gpio2" valueType="00200000" value="" />
      <registryValue name="gpio3" valueType="00200000" value="" />
      <registryValue name="gpiotimerval" valueType="00200000" value="" />
      <registryValue name="IBSSGMode" valueType="00200000" value="" />
      <registryValue name="IBSSGProtection" valueType="00020001" value="32000000" />
      <registryValue name="IBSSMode" valueType="00020001" value="30000000" />
      <registryValue name="Interference_Mode" valueType="REG_SZ" value="3" />
      <registryValue name="Intolerant" valueType="00200000" value="" />
      <registryValue name="ledbh0" valueType="REG_SZ" value="-1" />
      <registryValue name="ledbh1" valueType="REG_SZ" value="-1" />
      <registryValue name="ledbh2" valueType="REG_SZ" value="-1" />
      <registryValue name="ledbh3" valueType="REG_SZ" value="-1" />
      <registryValue name="ledblinkfast" valueType="REG_SZ" value="-1" />
      <registryValue name="ledblinkmed" valueType="REG_SZ" value="-1" />
      <registryValue name="ledblinkslow" valueType="REG_SZ" value="-1" />
      <registryValue name="leddc" valueType="REG_SZ" value="0" />
      <registryValue name="Locale" valueType="00200000" value="" />
      <registryValue name="LOM" valueType="REG_SZ" value="0" />
      <registryValue name="MixedCell" valueType="REG_SZ" value="0" />
      <registryValue name="MPC" valueType="REG_SZ" value="1" />
      <registryValue name="NetworkType" valueType="REG_SZ" value="-1" />
      <registr